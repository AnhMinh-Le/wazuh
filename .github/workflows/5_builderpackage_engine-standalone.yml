name: Engine Standalone

on:
  # Triggers the workflow on pull request but only changes in the src/engine/ directory.
  pull_request:
    types: [synchronize, opened, reopened, ready_for_review]
    paths:
      - 'src/engine/**'

# Ensures only one instance of this workflow is running per PR
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}

env:
  ENGINE_DIR: ${{github.workspace}}/src/engine
  ENGINE_STANDALONE_DIR: wazuh-engine-standalone
  ENGINE_STANDALONE_SOCKET: wazuh-engine-standalone/sockets/engine-api.sock

jobs:
  build:
    name: Build Server
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set tag and container name
        run: |
          VERSION="$(grep '"version"' $GITHUB_WORKSPACE/VERSION.json | sed -E 's/.*"version": *"([^"]+)".*/\1/')"
          echo "TAG=$VERSION" >> $GITHUB_ENV;
          echo "CONTAINER_NAME=pkg_rpm_manager_builder_amd64" >> $GITHUB_ENV;

      - name: Download docker image for package building
        run: |
          bash $GITHUB_WORKSPACE/.github/actions/ghcr-pull-and-push/pull_image_from_ghcr.sh ${{ secrets.GITHUB_TOKEN }} ${{ github.actor}} ${CONTAINER_NAME} ${TAG}

      - name: Build wazuh-engine in container
        run: |
          sed -i "s/option(ENGINE_ENABLE_REVERSE_ORDER_DECODERS_FEATURE \\\"Enable reverse order decoders\\\" OFF)/option(ENGINE_ENABLE_REVERSE_ORDER_DECODERS_FEATURE \\\"Enable reverse order decoders\\\" ON)/" src/engine/CMakeLists.txt
          docker run --entrypoint /workspace/wazuh/src/engine/standalone/docker-entrypoint.sh \
            -t -v ${{github.workspace}}:/workspace/wazuh:Z \
            -v ${{github.workspace}}/packages/output:/var/local/wazuh:Z \
            ${CONTAINER_NAME}:${TAG}

      - name: Upload engine binary
        uses: actions/upload-artifact@v4
        with:
          name: wazuh-engine
          path: src/build/engine/wazuh-engine

      - name: Upload wazuh shared libraries
        uses: actions/upload-artifact@v4
        with:
          name: wazuh-shared-libraries
          path: |
            src/libwazuhext.so
            src/libwazuhshared.so

      - name: Upload rocksdb shared libraries
        uses: actions/upload-artifact@v4
        with:
          name: rocksdb-shared-library
          path: |
            src/external/rocksdb/build/librocksdb.so
            src/external/rocksdb/build/librocksdb.so.8
            src/external/rocksdb/build/librocksdb.so.8.3.2

  create_standalone_zip:
    name: Create standalone compressed engine

    # Only runs if the PR status is different to Draft
    if: ${{ !github.event.pull_request.draft }}
    runs-on: ubuntu-latest
    needs: build
    timeout-minutes: 60

    steps:
    - name: Checkout Repo
      uses: actions/checkout@v3

    - name: Download engine binary
      uses: actions/download-artifact@v4
      with:
        name: wazuh-engine
        path: src/build/engine/

    - name: Download rocksdb shared libraries
      uses: actions/download-artifact@v4
      with:
        name: rocksdb-shared-library
        path: src/external/rocksdb/build/

    - name: Download wazuh shared libraries
      uses: actions/download-artifact@v4
      with:
        name: wazuh-shared-libraries
        path: src/

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: 3.12

    - name: Create zip scaffolding and copy files
      run: |
        install -d \
          wazuh-engine-standalone/bin/lib \
          wazuh-engine-standalone/default-security-policy \
          wazuh-engine-standalone/data/store/schema \
          wazuh-engine-standalone/data/kvdb \
          wazuh-engine-standalone/data/tzdb \
          wazuh-engine-standalone/logs \
          wazuh-engine-standalone/sockets
        touch wazuh-engine-standalone/bin/lib/.keep
        touch wazuh-engine-standalone/default-security-policy/.keep
        touch wazuh-engine-standalone/data/store/schema/.keep
        touch wazuh-engine-standalone/data/kvdb/.keep
        touch wazuh-engine-standalone/data/tzdb/.keep
        touch wazuh-engine-standalone/logs/.keep
        touch wazuh-engine-standalone/sockets/.keep
        cp src/engine/ruleset/schemas/engine-schema.json wazuh-engine-standalone/data/store/schema/
        cp src/engine/ruleset/schemas/wazuh-logpar-overrides.json  wazuh-engine-standalone/data/store/schema/
        cp src/engine/ruleset/schemas/allowed-fields.json  wazuh-engine-standalone/data/store/schema/
        cp src/engine/standalone/run_engine.sh wazuh-engine-standalone/
        chmod +x wazuh-engine-standalone/run_engine.sh
        cp src/engine/standalone/README.md wazuh-engine-standalone/
        cp src/external/rocksdb/build/librocksdb.so.8 wazuh-engine-standalone/bin/lib
        cp src/libwazuhext.so wazuh-engine-standalone/bin/lib
        cp src/build/engine/wazuh-engine wazuh-engine-standalone/bin/
        chmod +x wazuh-engine-standalone/bin/wazuh-engine

    - name: Compress standalone directory
      run: |
        zip -r wazuh-engine-standalone.zip wazuh-engine-standalone

    - name: Set version
      run: |
        VERSION="$(grep '"version"' $GITHUB_WORKSPACE/VERSION.json | sed -E 's/.*"version": *"([^"]+)".*/\1/')"
        echo "TAG=$VERSION" >> $GITHUB_ENV;

    - name: Upload compressed zip file
      uses: actions/upload-artifact@v4
      with:
        name: wazuh-engine-${{ env.TAG }}-standalone
        path: wazuh-engine-standalone.zip

  check_standalone_engine:
    name: Test standalone engine

    runs-on: ubuntu-latest
    needs: create_standalone_zip
    timeout-minutes: 60

    steps:
    - name: Checkout Repo
      uses: actions/checkout@v3

    - name: Set version
      run: |
        VERSION="$(grep '"version"' $GITHUB_WORKSPACE/VERSION.json | sed -E 's/.*"version": *"([^"]+)".*/\1/')"
        echo "TAG=$VERSION" >> $GITHUB_ENV;

    - name: Download compressed zip file
      uses: actions/download-artifact@v4
      with:
        name: wazuh-engine-${{ env.TAG }}-standalone
        path: /tmp/standalone-test

    - name: Unzip artifact
      run: |
        unzip /tmp/standalone-test/wazuh-engine-standalone.zip -d /tmp/standalone-test/

    - name: Basic communication test
      run: |
        cd /tmp/standalone-test/wazuh-engine-standalone
        ./run_engine.sh > engine_stdout.log 2> engine_stderr.log &
        ENGINE_PID=$!
        sleep 5
        curl --silent --unix-socket sockets/engine-api.sock \
            -X POST -H "Content-Type: application/json" \
            -d '{"name":"default"}' \
            http://localhost/router/route/get \
            > /dev/null 2>&1
        if [ $? -eq 0 ]; then
            echo "Engine started successfully"
            kill $ENGINE_PID
        else
            echo "Engine failed to start"
            kill $ENGINE_PID
            exit 1;
        fi

