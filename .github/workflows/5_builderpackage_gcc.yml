name: Build GCC Packages

on:
  workflow_dispatch:
    inputs:
      gcc_url:
        description: "GCC source tarball URL"
        required: true
        default: "https://ftp.gnu.org/gnu/gcc/gcc-15.1.0/gcc-15.1.0.tar.xz"

jobs:
  build-deb:
    runs-on: ubuntu-latest
    steps:
      - name: Create packages directory
        run: mkdir -p packages
      
      - name: Build .deb package in container
        run: |
          docker run --rm -v $PWD/packages:/packages debian:8 bash -c "
            rm -f /etc/apt/sources.list && \
            printf 'deb [check-valid-until=no] http://archive.debian.org/debian jessie main contrib non-free\n' \
            > /etc/apt/sources.list && \
            printf 'deb [check-valid-until=no] http://archive.debian.org/debian-security jessie/updates main contrib non-free\n' \
            >> /etc/apt/sources.list && \
            echo 'Acquire::Check-Valid-Until \"false\";' > /etc/apt/apt.conf.d/90no-check-valid && \
            
            apt-get -o Acquire::AllowInsecureRepositories=true \
            -o Acquire::Check-Valid-Until=false update && \
            DEBIAN_FRONTEND=noninteractive \
            apt-get install -y --allow-unauthenticated --no-install-recommends \
            build-essential curl ca-certificates \
            bzip2 xz-utils git make flex texinfo \
            libgmp-dev libmpfr-dev libmpc-dev zlib1g-dev \
            ruby ruby-dev wget && \
            apt-get clean && rm -rf /var/lib/apt/lists/* && \
            
            curl -LO https://ftp.gnu.org/gnu/gcc/gcc-8.5.0/gcc-8.5.0.tar.xz && \
            tar -xf gcc-8.5.0.tar.xz && \
            cd gcc-8.5.0 && \
            ./contrib/download_prerequisites && \
            mkdir -p build && cd build && \
            ../configure --prefix=/opt/gcc-8.5.0 \
                         --disable-multilib \
                         --enable-languages=c,c++ \
                         --with-system-zlib \
                         --disable-bootstrap && \
            make && make install-strip && \
            
            cd /usr/src && \
            wget \"${{ github.event.inputs.gcc_url }}\" -O gcc.tar.xz && \
            tar -xf gcc.tar.xz && \
            cd gcc-* && \
            PATH=/opt/gcc-8.5.0/bin:\$PATH \
            CC=/opt/gcc-8.5.0/bin/gcc \
            CXX=/opt/gcc-8.5.0/bin/g++ \
            ./contrib/download_prerequisites && \
            mkdir build && cd build && \
            ../configure --prefix=/opt/gcc-15 --disable-multilib --enable-languages=c,c++ --with-system-zlib && \
            make -j\$(nproc) && \
            make install-strip && \
            
            # Create dummy package for testing
            mkdir -p /pkgbuild/gcc15/DEBIAN && \
            printf 'Package: gcc15\n' >> /pkgbuild/gcc15/DEBIAN/control && \
            printf 'Version: 15.1-1\n' >> /pkgbuild/gcc15/DEBIAN/control && \
            printf 'Section: devel\n' >> /pkgbuild/gcc15/DEBIAN/control && \
            printf 'Priority: optional\n' >> /pkgbuild/gcc15/DEBIAN/control && \
            printf 'Architecture: amd64\n' >> /pkgbuild/gcc15/DEBIAN/control && \
            printf 'Maintainer: bootstrap <root@localhost>\n' >> /pkgbuild/gcc15/DEBIAN/control && \
            printf 'Provides: gcc, g++\n' >> /pkgbuild/gcc15/DEBIAN/control && \
            printf 'Description: GNU Compiler Collection 15.1\n' >> /pkgbuild/gcc15/DEBIAN/control && \
            cat /pkgbuild/gcc15/DEBIAN/control && \
            mkdir -p /pkgbuild/gcc15/opt/gcc-15/bin && \
            echo '#!/bin/bash' > /pkgbuild/gcc15/opt/gcc-15/bin/gcc && \
            echo 'echo \"This is a dummy GCC 15.1 package for testing\"' >> /pkgbuild/gcc15/opt/gcc-15/bin/gcc && \
            chmod +x /pkgbuild/gcc15/opt/gcc-15/bin/gcc && \
            chmod 755 /pkgbuild/gcc15/DEBIAN && \
            dpkg-deb --build /pkgbuild/gcc15 /packages
          "
      
      - name: Upload .deb artifact
        uses: actions/upload-artifact@v4
        with:
          name: gcc-deb
          path: packages/*.deb
      
      


  build-rpm:
    runs-on: ubuntu-latest
    steps:
      - name: Create packages directory
        run: mkdir -p packages
      
      - name: Build .rpm package in container
        run: |
          docker run --rm -v $PWD/packages:/packages centos:7 bash -c "
            sed -i 's|mirrorlist=|#mirrorlist=|g' /etc/yum.repos.d/CentOS-*.repo && \
            sed -i 's|#baseurl=http://mirror.centos.org|baseurl=https://vault.centos.org|g' /etc/yum.repos.d/CentOS-*.repo && \
            
            yum -y install centos-release-scl-rh epel-release && \
            sed -i 's|mirrorlist=|#mirrorlist=|g' /etc/yum.repos.d/CentOS-SCLo-*.repo && \
            sed -i 's|#baseurl=http://mirror.centos.org|baseurl=https://vault.centos.org|g' /etc/yum.repos.d/CentOS-SCLo-*.repo && \
            yum -y install devtoolset-11-gcc devtoolset-11-gcc-c++ \
              git make bzip2 xz wget \
              gmp-devel mpfr-devel libmpc-devel isl-devel zlib-devel \
              texinfo flex diffutils rpm-build && \
            yum clean all && \
            
            source /opt/rh/devtoolset-11/enable && \
            cd /usr/src && \
            wget \"${{ github.event.inputs.gcc_url }}\" -O gcc.tar.xz && \
            tar -xf gcc.tar.xz && \
            cd gcc-* && \
            ./contrib/download_prerequisites && \
            mkdir build && cd build && \
            ../configure --prefix=/opt/gcc-15 --disable-multilib --enable-languages=c,c++ --with-system-zlib && \
            make -j\$(nproc) && \
            make install-strip && \
            
            mkdir -p /tmp/rpmbuild/{BUILD,RPMS,SOURCES,SPECS,SRPMS} && \
            mkdir -p /tmp/rpmbuild/SOURCES/gcc15/opt && \
            cp -a /opt/gcc-15 /tmp/rpmbuild/SOURCES/gcc15/opt/ && \
            tar -czf /tmp/rpmbuild/SOURCES/gcc15.tar.gz -C /tmp/rpmbuild/SOURCES gcc15 && \
            rm -rf /tmp/rpmbuild/SOURCES/gcc15 && \
            
            printf 'Name: gcc15\n' >> /tmp/rpmbuild/SPECS/gcc15.spec && \
            printf 'Version: 15.1\n' >> /tmp/rpmbuild/SPECS/gcc15.spec && \
            printf 'Release: 1\n' >> /tmp/rpmbuild/SPECS/gcc15.spec && \
            printf 'Summary: GCC 15.1 built manually\n' >> /tmp/rpmbuild/SPECS/gcc15.spec && \
            printf 'License: GPLv3+\n' >> /tmp/rpmbuild/SPECS/gcc15.spec && \
            printf 'Group: Development/Tools\n' >> /tmp/rpmbuild/SPECS/gcc15.spec && \
            printf 'BuildArch: x86_64\n' >> /tmp/rpmbuild/SPECS/gcc15.spec && \
            printf 'AutoReqProv: no\n' >> /tmp/rpmbuild/SPECS/gcc15.spec && \
            printf 'Source0: gcc15.tar.gz\n' >> /tmp/rpmbuild/SPECS/gcc15.spec && \

            printf '%%description\n' >> /tmp/rpmbuild/SPECS/gcc15.spec && \
            printf 'GCC 15.1 built manually and installed to /opt/gcc-15.\n' >> /tmp/rpmbuild/SPECS/gcc15.spec && \

            printf '%%prep\n' >> /tmp/rpmbuild/SPECS/gcc15.spec && \
            printf '%%setup -q -c -a 0\n' >> /tmp/rpmbuild/SPECS/gcc15.spec && \

            printf '%%install\n' >> /tmp/rpmbuild/SPECS/gcc15.spec && \
            printf 'mkdir -p %%{buildroot}/opt\n' >> /tmp/rpmbuild/SPECS/gcc15.spec && \
            printf 'cp -a gcc15/opt/gcc-15 %%{buildroot}/opt/\n' >> /tmp/rpmbuild/SPECS/gcc15.spec && \

            printf '%%files\n' >> /tmp/rpmbuild/SPECS/gcc15.spec && \
            printf '/opt/gcc-15\n' >> /tmp/rpmbuild/SPECS/gcc15.spec && \

            rpmbuild -bb --define '_topdir /tmp/rpmbuild' /tmp/rpmbuild/SPECS/gcc15.spec && \
            cp /tmp/rpmbuild/RPMS/x86_64/*.rpm /packages
          "
      
      - name: Upload .rpm artifact
        uses: actions/upload-artifact@v4
        with:
          name: gcc-rpm
          path: packages/*.rpm
      
      
